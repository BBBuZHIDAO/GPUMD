.. _kw_ensemble_shock_nemd:

:attr:`ensemble` (NEMD shock methods)
=========================

In a typical NEMD shock simulation, a shock wave is generated by a moving *wall*.
We can simulate the *wall* in multiple ways:

- :attr:`wall_piston`: A fixed layer of atoms.
- :attr:`wall_mirror`: A momentum mirror that reflects atoms.
- :attr:`wall_harmonic`: A harmonic potential that pushes atoms away. It is softer than a momentum mirror.

Any of these methods can generate a shock wave. There are other possible methods, but the above methods are usually enough.


Note that the shock wave is in x direction.
Another wall is placed at the other side of the cell to prevent atoms from escaping.
You **MUST NOT** use non-peridic boundary condition in x dirction, since currently GPUMD can not handle it well. A vacuum layer is automatically added to the other side of the cell.

We recommand to use it with the :ref:`dump_piston keyword <kw_dump_piston>`.

Syntax
------

The parameters are specified as follows:

.. code-block:: rst

    ensemble wall_piston vp <vp> thickness <thickness>

- :attr:`<vp>`: Indicates the velocity of the moving piston in km/s.
- :attr:`<thickness>`: Defines the thickness of the wall in Angstroms. This keyword is optional with the default value 20.

.. code-block:: rst

    ensemble wall_mirror vp <vp>

- :attr:`<vp>`: Indicates the velocity of the moving piston in km/s.

.. code-block:: rst

    ensemble wall_harmonic vp <vp> k <k>

- :attr:`<vp>`: Indicates the velocity of the moving piston in km/s.
- :attr:`<k>`: Defines the strength of the harmonic wall in eV/A^2. This keyword is optional with the default value 10.

